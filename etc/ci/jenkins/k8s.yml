---
---
apiVersion: v1
data:
  CICD_NAMESPACE: cicd
  JENKINS_MANUAL_BUILD: "0"
kind: ConfigMap
metadata:
  name: jenkins.config.common
  namespace: cicd


---
apiVersion: v1
data:
  # Specifies how the Jenkins master provisions the Docker build
  # agent. Choose from 'ssh' (pre-provisioned), 'ssh+ansible'
  # (provision using Ansible) or 'gcp' (dynamically create a
  # Computer Engine instance from a Packer image).
  DOCKER_BUILD_AGENT: ssh
  DOCKER_BUILD_AGENT_HOSTS: "10.17.2.20;10.17.2.21"
  JENKINS_URL: https://jenkins.http.local.quantumframework.org
  JENKINS_ADMIN_EMAIL: nobody@nowhere.com
  K8S_JENKINS_URL: http://jenkins-discovery.cicd.svc.cluster.local:8080/
kind: ConfigMap
metadata:
  name: jenkins.config.local
  namespace: cicd


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: cicd
automountServiceAccountToken: false


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin
  #namespace: ${CICD_NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: cicd

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins-admin
  namespace: cicd-ephemeral
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: cicd


---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-ui
  name: jenkins-ui
  namespace: cicd
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins


---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-discovery
  name: jenkins-discovery
  namespace: cicd
spec:
  ports:
  # The Kubernetes Slaves plugin also wants to talk to the Web UI
  # so we need to expose the port here also.
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: slaves
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    app: jenkins


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: default-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/"
  namespace: cicd
spec:
  tls:
  - hosts:
    - jenkins.http.local.quantumframework.org
  rules:
  - host: jenkins.http.local.quantumframework.org
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins-ui
          servicePort: 8080
